{
  "Comment": "A description of my state machine",
  "StartAt": "Unwrap Event",
  "States": {
    "Unwrap Event": {
      "Type": "Pass",
      "Next": "Parse Image",
      "Parameters": {
        "s3Event.$": "States.StringToJson($[0].body)"
      }
    },
    "Parse Image": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload": {
          "bucketName.$": "$.s3Event.Records[0].s3.bucket.name",
          "key.$": "$.s3Event.Records[0].s3.object.key"
        },
        "FunctionName": "${DocParserLambda}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ],
      "Next": "DetectSentiment"
    },
    "DetectSentiment": {
      "Type": "Task",
      "Next": "DynamoDB PutItem",
      "Parameters": {
        "LanguageCode": "en",
        "Text.$": "$.OverallComment"
      },
      "Resource": "arn:aws:states:::aws-sdk:comprehend:detectSentiment",
      "ResultPath": "$.sentimentTask"
    },
    "DynamoDB PutItem": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:putItem",
      "Parameters": {
        "TableName": "${TableName}",
        "Item": {
          "pk": {
            "S.$": "$.Event"
          },
          "sk": {
            "S.$": "$.SurveyNumber"
          },
          "ProcessedAt": {
            "S.$": "$.metadata.timestamp"
          },
          "Name": {
            "S.$": "$.Name"
          },
          "Email": {
            "S.$": "$.Email"
          },
          "FoodQuality": {
            "N.$": "$.FoodQuality"
          },
          "CabinAccessibility": {
            "N.$": "$.CabinAccessibility"
          },
          "Topics": {
            "N.$": "$.Topics"
          },
          "SessionLength": {
            "N.$": "$.SessionLength"
          },
          "CabinCleanliness": {
            "N.$": "$.CabinCleanliness"
          },
          "SpeakerChoice": {
            "N.$": "$.SpeakerChoice"
          },
          "OverallComment": {
            "S.$": "$.OverallComment"
          },
          "HighlightComment": {
            "S.$": "$.HighlightComment"
          },
          "Sentiment": {
            "S.$": "$.sentimentTask.Sentiment"
          },
          "PositiveScore": {
            "N.$": "States.Format('{}', $.sentimentTask.SentimentScore.Positive)"
          },
          "NeutralScore": {
            "N.$": "States.Format('{}', $.sentimentTask.SentimentScore.Neutral)"
          },
          "NegativeScore": {
            "N.$": "States.Format('{}', $.sentimentTask.SentimentScore.Negative)"
          },
          "MixedScore": {
            "N.$": "States.Format('{}', $.sentimentTask.SentimentScore.Mixed)"
          }
        }
      },
      "Next": "Raise: Result Generated"
    },
    "Raise: Result Generated": {
      "Type": "Task",
      "Resource": "arn:aws:states:::events:putEvents",
      "Parameters": {
        "Entries": [
          {
            "Detail.$": "$",
            "DetailType": "result-generated",
            "EventBusName": "${EventBusName}",
            "Source": "survey-app"
          }
        ]
      },
      "End": true
    }
  }
}